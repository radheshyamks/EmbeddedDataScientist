/*****************************************************************************
* Usage examples: The Builder pattern is a well-known pattern in C++ world. 
* Itâ€™s especially useful when you need to create an object with lots of possible configuration options.
* Identification: The Builder pattern can be recognized in a class, which has a single creation method 
* and several methods to configure the resulting object. Builder methods often support chaining 
* (for example, someBuilder->setValueA(1)->setValueB(2)->create()).
*****************************************************************************************************************
* Conceptual Example
* This example illustrates the structure of the Builder design pattern. It focuses on answering these questions:
* What classes does it consist of?
* What roles do these classes play?
* In what way the elements of the pattern are related?
*/

/**
 * It makes sense to use the Builder pattern only when your products are quite
 * complex and require extensive configuration.
 *
 * Unlike in other creational patterns, different concrete builders can produce
 * unrelated products. In other words, results of various builders may not
 * always follow the same interface.
 */